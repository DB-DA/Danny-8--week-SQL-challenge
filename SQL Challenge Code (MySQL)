CREATE TABLE sales (
  customer_id VARCHAR(1),
  order_date date,
  product_id int
);

INSERT INTO sales
  (customer_id, order_date, product_id)
VALUES
  ('A', '2021-01-01', 1),
  ('A', '2021-01-01', 2),
  ('A', '2021-01-07', 2),
  ('A', '2021-01-10', 3),
  ('A', '2021-01-11', 3),
  ('A', '2021-01-11', 3),
  ('B', '2021-01-01', 2),
  ('B', '2021-01-02', 2),
  ('B', '2021-01-04', 1),
  ('B', '2021-01-11', 1),
  ('B', '2021-01-16', 3),
  ('B', '2021-02-01', 3),
  ('C', '2021-01-01', 3),
  ('C', '2021-01-01', 3),
  ('C', '2021-01-07', 3);
 

CREATE TABLE menu (
  product_id int,
  product_name VARCHAR(5),
  price int
);

INSERT INTO menu
  (product_id, product_name, price)
VALUES
  (1, 'sushi', 10),
  (2, 'curry', 15),
  (3, 'ramen', 12);

CREATE TABLE members (
  customer_id VARCHAR(1),
   join_date DATE
);

INSERT INTO members
  (customer_id, join_date)
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');
  






/* --------------------
   Case Study Questions
   --------------------*/

-- 1. What is the total amount each customer spent at the restaurant?

select s.customer_id, sum(m.price) as total_amount
from sales as s inner join menu as m
on s.product_id =m.product_id 
group by s.customer_id;

-- 2. How many days has each customer visited the restaurant?

select customer_id,count(*) as No_of_Days_Visited
from sales group by customer_id;

-- 3. What was the first item from the menu purchased by each customer?

select arrange.customer_id, arrange.product_name as product_first_bought
from
(select s.customer_id, m.product_name , 
row_number() over (partition by s.customer_id order by s.order_date asc) as purchase_rank 
from sales as s inner join menu as m 
on s.product_id=m.product_id) arrange
where purchase_rank <2;

-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

select m.product_name as most_purchased, count(s.customer_id) as purchasing_frequency
from 
sales as s inner join menu as m on s.product_id= m.product_id 
group by m.product_name
order by purchasing_frequency desc limit 1;

-- 5. Which item was the most popular for each customer?
select T.customer_id,Q.product_name as popular_food from
(select s.customer_id, m.product_name, count(*)as frequency
from 
sales as s inner join menu as m 
on s.product_id= m.product_id group by s.customer_id, m.product_name)Q
inner join 
(select customer_id,max(frequency) as maximum from (
select s.customer_id, m.product_name, count(*)as frequency
from 
sales as s inner join menu as m 
on s.product_id= m.product_id group by s.customer_id, m.product_name) T0
group by customer_id)T on T.maximum= Q.frequency and T.customer_id=Q.customer_id;


-- 6. Which item was purchased first by the customer after they became a member?
select T1.customer_id, T1.product_name as first_bought_after_membership
from (
select s.customer_id, m.product_name, row_number() over
(partition by s.customer_id order by members.join_date asc) as when_purchased_after_joining
from 
menu as m inner join sales as s  on s.product_id= m.product_id 
inner join members on s.customer_id=members.customer_id ) T1
where when_purchased_after_joining=1;


-- 7. Which item was purchased just before the customer became a member?

select T2.customer_id,T2.product_name as last_bought_before_membership
from
(select s.customer_id, m.product_name, s.order_date, row_number()
over (partition by s.customer_id order by s.order_date desc) as when_purchased_before_joining
from 
menu as m inner join sales as s  on s.product_id= m.product_id 
inner join members on s.customer_id=members.customer_id where s.order_date <members.join_date) T2
where  when_purchased_before_joining=1;

-- 8. What is the total items and amount spent for each member before they became a member?

select customer_id, count(*) as total_items , sum(price) as amount_spent
from
(select s.customer_id, m.price
from 
menu as m inner join sales as s  on s.product_id= m.product_id 
inner join members on s.customer_id=members.customer_id
where s.order_date <members.join_date) T3
group by customer_id;


-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

select customer_id, sum(points) as total_points
from (
select s.customer_id, 
Case when m.product_name='sushi' then 20*(price)
else 10*price end as points 
from sales as s inner join menu as m on s.product_id=m.product_id) T4
group by customer_id;


-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

select customer_id, sum(award)as total_points
from(
select s.customer_id, 
case when s.order_date >= members.join_date +6  then 2*10*price
when m.product_name='sushi' then 20*(price)
else 10*(price) end as award
from 
menu as m inner join sales as s  on s.product_id= m.product_id 
inner join members on s.customer_id=members.customer_id 
where order_date <='2021-01-31'
) T5 group by customer_id 





